{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_capacitor_mlkit_barcode_scanning__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_2__","react_dom__WEBPACK_IMPORTED_MODULE_2___default","lodash__WEBPACK_IMPORTED_MODULE_3__","lodash__WEBPACK_IMPORTED_MODULE_3___default","App","result","setResult","useState","scan","async","BarcodeScanner","isGoogleBarcodeScannerModuleAvailable","available","e","console","info","isGoogleBarcodeScannerModuleInstalled","barcodes","_","chain","first","get","value","installGoogleBarcodeScannerModule","addListener","state","progress","error","React","createElement","className","onClick","ScanResult","Error","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+IAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAK,EAAAE,GAAAE,EAAAT,EAAA,GAAAU,EAAAV,EAAAK,EAAAI,GAAAT,EAAA,IASA,SAASW,IACP,MAAOC,EAAQC,GAAaC,mBAAS,MAoEjCC,EAAOC,UACX,IAEI,QA3DwCA,WAC5C,IAEI,aADqBC,IAAeC,yCACtBC,UAChB,MAAOC,GAEL,OADAC,QAAQC,KAAK,mEAAoEF,IAC1E,IAqDGG,GAAyC,CAE/C,MAAMC,SAAEA,SAAmBP,IAAeF,OAE1C,OADeU,IAAEC,MAAMF,GAAUG,QAAQC,IAAI,gBAAgBC,aAzC7Bb,WACxC,UACUC,IAAea,oCACrBb,IAAec,YAAY,4CAA8CT,IACrED,QAAQC,KAAK,4CAA6CA,EAAKU,MAAOV,EAAKW,YAEjF,MAAOb,GACLC,QAAQC,KAAK,iDAAkDF,KAsCrDU,GAEZ,MAAOI,GACLb,QAAQa,MAAM,4BAA6BA,KAM/C,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,SAAIxB,GACJuB,IAAAC,cAAA,UAAQE,QA9CUtB,UACtB,IACI,MAAMuB,QAAmBxB,IAEzB,GADAF,EAAU0B,IACLA,EACD,MAAM,IAAIC,MAAM,oBAEtB,MAAON,GACLb,QAAQa,MAAM,4BAA6BA,MAsCT,SAMxC,MAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOV,IAAAC,cAACzB,EAAG,MAAK8B","file":"static/js/main.3c2cc944.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {BarcodeScanner} from \"@capacitor-mlkit/barcode-scanning\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\"\n\nimport \"./styles.css\";\n\n\n\nfunction App() {\n  const [result, setResult] = useState(null);\n\n  /**\n     * Checks if the Google Barcode Scanner module is installed.\n     *\n     * This function uses the Capacitor Barcode Scanner plugin to check if the Google Barcode Scanner module is available.\n     *\n     * @async\n     * @function isGoogleBarcodeScannerModuleInstalled\n     * @returns {Promise<boolean>} A promise that resolves to a boolean indicating whether the Google Barcode Scanner module is available.\n     * @throws Will log an error message if the check fails.\n     */\nconst isGoogleBarcodeScannerModuleInstalled = async () =>{\n  try {\n      const status = await BarcodeScanner.isGoogleBarcodeScannerModuleAvailable();\n      return status.available;\n  } catch (e) {\n      console.info(\"Error checking google barcode scanner module installation status\", e);\n      return false;\n  }\n}\n\n/**\n* Installs the Google Barcode Scanner module.\n*\n* This function uses the Capacitor Barcode Scanner plugin to install the Google Barcode Scanner module.\n* It also listens for the installation progress and logs the progress state and percentage.\n*\n* @async\n* @function installGoogleBarcodeScannerModule\n* @returns {Promise<void>} A promise that resolves when the installation is complete.\n* @throws Will log an error message if the installation fails.\n*/\nconst installGoogleBarcodeScannerModule = async () => {\n  try {\n      await BarcodeScanner.installGoogleBarcodeScannerModule();\n      BarcodeScanner.addListener('googleBarcodeScannerModuleInstallProgress', (info) => {\n          console.info('googleBarcodeScannerModuleInstallProgress', info.state, info.progress);\n      });\n  } catch (e) {\n      console.info(\"Error installing google barcode scanner module\", e);\n  }\n}\n\nconst handleScanClick = async () => {\n  try {\n      const ScanResult = await scan()\n      setResult(ScanResult);\n      if (!ScanResult) {\n          throw new Error('No barcode found');\n      }\n  } catch (error) {\n      console.error('Error during barcode scan', error);\n  }\n}\n\n/**\n* Scans a barcode using the Google Barcode Scanner module.\n*\n* This function checks if the Google Barcode Scanner module is installed.\n* If installed, it scans the barcode and returns the result.\n* If not installed, it installs the module.\n*\n* @async\n* @function scan\n* @returns {Promise<string|undefined>} The scanned barcode result or undefined if an error occurs.\n* @throws Will log an error message if the scan or installation fails.\n*/\nconst scan = async () => {\n  try {\n      // Check if the Google Barcode Scanner module is installed\n      if (await isGoogleBarcodeScannerModuleInstalled()) {\n          // Scan the barcode and return the result\n          const { barcodes } = await BarcodeScanner.scan();\n          const result = _.chain(barcodes).first().get('displayValue').value()\n          return result;\n      } else {\n          // Install the Google Barcode Scanner module if not available\n          await installGoogleBarcodeScannerModule();\n      }\n  } catch (error) {\n      console.error('Error during barcode scan', error);\n  }\n}\n\n  \n\n  return (\n    <div className=\"App\">\n      <p>{result}</p>\n      <button onClick={handleScanClick}>scan</button>\n      \n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}